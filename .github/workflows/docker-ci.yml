# Fichier : .github/workflows/docker-ci.yml

# Nom affiché pour ce workflow dans l'interface GitHub Actions.
name: Build and Push Frontend Docker Image

# Déclencheur du workflow : il s'exécute automatiquement
# à chaque fois qu'une modification est poussée sur la branche 'main'.
on:
  push:
    branches:
      - main

# Définition des permissions nécessaires pour le workflow.
# 'contents: read' permet de lire le code source du dépôt.
# 'packages: write' permet de publier l'image Docker sur le GitHub Container Registry.
permissions:
  contents: read
  packages: write

# Définition des tâches (jobs) à exécuter. Ici, nous n'avons qu'un seul job.
jobs:
  # Nom du job.
  build_and_push_image:
    # Indique sur quel type de machine virtuelle le job s'exécutera.
    # 'ubuntu-latest' est une machine Ubuntu hébergée par GitHub.
    runs-on: ubuntu-latest

    # Liste des étapes du job.
    steps:
      # Étape 1 : Récupération du code source.
      - name: Checkout code
        # Utilise l'action officielle de GitHub pour cloner le dépôt.
        uses: actions/checkout@v3

      # Étape 2 : Connexion au registre de conteneurs de GitHub.
      - name: Log in to GitHub Container Registry
        # Utilise l'action Docker pour se connecter à un registre.
        uses: docker/login-action@v2
        with:
          # Le registre cible est celui de GitHub.
          registry: ghcr.io
          # L'utilisateur est l'acteur qui a déclenché le workflow.
          username: ${{ github.actor }}
          # Le mot de passe est un jeton secret généré par GitHub.
          password: ${{ secrets.GITHUB_TOKEN }}

      # Étape 3 : Construction et publication de l'image Docker.
      - name: Build and push Docker image
        # Utilise l'action Docker pour construire et publier l'image.
        uses: docker/build-push-action@v5
        with:
          # Le contexte de build est le répertoire courant (là où se trouve le Dockerfile).
          context: .
          # L'option 'push: true' indique de publier l'image après sa construction.
          push: true
          # Définit l'étiquette (tag) de l'image.
          # Le format est 'registre/nom_du_repo:tag'. ':latest' est le tag courant.
          tags: ghcr.io/${{ github.repository }}:latest
